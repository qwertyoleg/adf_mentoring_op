{
	"name": "incremental load to OnlinePurchase table",
	"properties": {
		"activities": [
			{
				"name": "Copy from azure blob to SQL table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "file_name",
								"value": "$$FILEPATH"
							},
							{
								"name": "pipeline_id",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"modifiedDatetimeStart": {
								"value": "@variables('LastWatermarkDate')",
								"type": "Expression"
							},
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"transaction_id"
							]
						},
						"sqlWriterUseTableLock": true,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['serviceName']"
								},
								"sink": {
									"name": "online_service_name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['serviceCode']"
								},
								"sink": {
									"name": "online_service_code",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['movieId']"
								},
								"sink": {
									"name": "movie_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['userId']"
								},
								"sink": {
									"name": "user_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['price']"
								},
								"sink": {
									"name": "price",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['transaction']['id']"
								},
								"sink": {
									"name": "transaction_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['transaction']['datetime']"
								},
								"sink": {
									"name": "transaction_date",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['file_name']"
								},
								"sink": {
									"name": "source_filename",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['pipeline_id']"
								},
								"sink": {
									"name": "pipelineId",
									"type": "String"
								}
							}
						],
						"collectionReference": ""
					}
				},
				"inputs": [
					{
						"referenceName": "AzureBlobOnlineContainer",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTable_stg_online_purchase",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Retrive online_purchise table new watermark value",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Delete archived files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT max([transaction_date]) as newWatermark\n  FROM [stg].[online_purchase]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "azureSQLDatabaseMovies_cinema_tickets",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "update watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set newWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@variables('newWatermarkDate')",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"TableName": {
							"value": "[stg].[online_purchase]",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "polulate tOnlineService table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy from azure blob to SQL table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulate_tOnlineService]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "populate tOnlinePurchase  table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "polulate tOnlineService table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulate_tOnlinePurchase]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete archived files",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Archive online purchases",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureBlobOnlineContainer",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@variables('LastWatermarkDate')",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Archive online purchases",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "populate tOnlinePurchase  table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"modifiedDatetimeStart": {
								"value": "@variables('LastWatermarkDate')",
								"type": "Expression"
							},
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "AzureBlobOnlineContainer",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DataLake_archive",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Retrive last watermark date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT [Watermark]\n  FROM [dbo].[watermarkable]\n  where [TableName] = '[stg].[online_purchase]'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable_tOnlinePurchase",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set watermark",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Retrive last watermark date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "newWatermarkDate",
					"value": {
						"value": "@activity('Retrive last watermark date').output.firstRow.Watermark",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set newWatermark",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Retrive online_purchise table new watermark value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "newWatermarkDate",
					"value": {
						"value": "@activity('Retrive online_purchise table new watermark value').output.firstRow.newWatermark",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"newWatermarkDate": {
				"type": "String"
			},
			"LastWatermarkDate": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-04-25T11:07:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}