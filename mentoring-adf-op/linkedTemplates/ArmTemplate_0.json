{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mentoring-adf-op"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorageAzureSubscription_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageAzureSubscription'"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileStorage1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabaseParametrized_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseParametrized'"
		},
		"toMyBLobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'toMyBLobStorage'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azurementoringdatalakeop.dfs.core.windows.net"
		},
		"AzureDataLakeStorageAzureSubscription_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azurementoringdatalakeop.dfs.core.windows.net/"
		},
		"linked_service_to_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mentoring-key-vault-op1.vault.azure.net/"
		},
		"archive trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3342c551-bb4e-4983-b506-d5ae969432c4/resourceGroups/azure-mentoring-op/providers/Microsoft.Storage/storageAccounts/azurementoringdatalakeop"
		},
		"filesAddedInMoreMoviesContainer_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3342c551-bb4e-4983-b506-d5ae969432c4/resourceGroups/azure-mentoring-op/providers/Microsoft.Storage/storageAccounts/azurementoringstorageop"
		},
		"files_written_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/3342c551-bb4e-4983-b506-d5ae969432c4/resourceGroups/azure-mentoring-op/providers/Microsoft.Storage/storageAccounts/azurementoringdatalakeop"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/github mode test new name')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get exchange rate",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get api secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('http://api.exchangeratesapi.io/v1/latest?access_key=',string(activity('Get api secret').output.value),'&symbols=CAD,GBP,USD')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Set CAD exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CAD",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.CAD)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set GBP exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "GBP",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.GBP)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set USD exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "USD",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.USD)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get api secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(string(pipeline().globalParameters.ExchangeRateSecretKeyVaultUrl), '?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"GBP": {
						"type": "String"
					},
					"CAD": {
						"type": "String"
					},
					"USD": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/github mode test new name_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get exchange rate",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get api secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('http://api.exchangeratesapi.io/v1/latest?access_key=',string(activity('Get api secret').output.value),'&symbols=CAD,GBP,USD')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Set CAD exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CAD",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.CAD)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set GBP exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "GBP",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.GBP)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set USD exchange rate to EUR",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get exchange rate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "USD",
							"value": {
								"value": "@string(activity('Get exchange rate').output.rates.USD)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get api secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(string(pipeline().globalParameters.ExchangeRateSecretKeyVaultUrl), '?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"GBP": {
						"type": "String"
					},
					"CAD": {
						"type": "String"
					},
					"USD": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageAzureSubscription')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageAzureSubscription_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageAzureSubscription_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "ratings"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseParametrized')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseParametrized_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_service_to_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('linked_service_to_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/toMyBLobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('toMyBLobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_i03')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-04-21T10:41:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/archive trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/movies",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('archive trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesAddedInMoreMoviesContainer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/moremovies/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('filesAddedInMoreMoviesContainer_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/files_written')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/movies/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('files_written_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure-IR-M8')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "France Central",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 32,
							"timeToLive": 5,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeAustraliaEast')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/logic-app-user-credential')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/3342c551-bb4e-4983-b506-d5ae969432c4/resourceGroups/azure-mentoring-op/providers/Microsoft.ManagedIdentity/userAssignedIdentities/Logic-app-user"
				}
			},
			"dependsOn": []
		}
	]
}